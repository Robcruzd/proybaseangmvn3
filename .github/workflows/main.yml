name: Application CI
on: [push, pull_request]
env:
  azureSubscription: '15199966-ddeb-4f5e-8809-22a696b62159'
  webAppName: 'proybaseangmvn'
  environmentName: 'proybaseangmvn'
  vmImageName: 'ubuntu-latest'
  NODE_VERSION: 16.17.0
  # SPRING_OUTPUT_ANSI_ENABLED: NEVER
  SPRING_JPA_SHOW_SQL: false
  JHI_DISABLE_WEBPACK_LOGS: true
  NG_CLI_ANALYTICS: 'false'
  JHI_E2E_HEADLESS: true
jobs:
  pipeline:
    name: proybaseangmvn3 pipeline
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
    timeout-minutes: 40
    # env:
    #   NODE_VERSION: 16.17.0
    #   SPRING_OUTPUT_ANSI_ENABLED: DETECT
    #   SPRING_JPA_SHOW_SQL: false
    #   JHI_DISABLE_WEBPACK_LOGS: true
    #   NG_CLI_ANALYTICS: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Install node.js packages
        run: npm install
      - name: Run backend test
        run: |
          chmod +x mvnw
          npm run ci:backend:test
      - name: Run frontend test
        run: npm run ci:frontend:test
      - name: Package application
        run: npm run java:jar:prod
      - name: Build and publish docker image
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        run: |
          GIT_TAG=:${GITHUB_REF#refs/tags/}
          DOCKER_TAG=${GIT_TAG#:refs/heads/main}
          ./mvnw -ntp jib:build -Djib.to.image=jhipster/proybaseangmvn-3${DOCKER_TAG} -Djib.to.auth.username="${{ secrets.DOCKER_USERNAME }}" -Djib.to.auth.password="${{ secrets.DOCKER_PASSWORD }}" -Pprod
      - name: 'E2E: Package'
        run: npm run ci:e2e:package
      - name: 'E2E: Prepare'
        run: npm run ci:e2e:prepare
      - name: 'E2E: Run'
        run: npm run ci:e2e:run
        env:
          CYPRESS_ENABLE_RECORD: false
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      - name: 'E2E: Teardown'
        run: npm run ci:e2e:teardown

  build:
    runs-on: $vmImageName
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Maven Package
      uses: actions/setup-java@v2
      with:
        java-version: $NODE_VERSION
    - name: Maven Packagerun
      run: mvn package

    - name: Copy files to artifact staging directory
      run: |
        mkdir -p ${{ github.workspace }}/drop
        cp -R target/proy*.jar ${{ github.workspace }}/drop/
      working-directory: ${{ github.workspace }}

    - name: Publish Artifact
      uses: actions/upload-artifact@v2
      with:
        name: drop
        path: ${{ github.workspace }}/drop

  deploy:
    needs: build
    runs-on: $vmImageName
    environment: $environmentName
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: drop
    - name: Download Artifactrun
      run: |
        cd $(System.DefaultWorkingDirectory)

    - name: Azure Web App Deploy proybaseangmvn
      uses: azure/webapps-deploy@v2
      with:
        app-name: $webAppName
        package: ${{ github.workspace }}/drop/**/target/*.?(war|jar)
        subscription: $azureSubscription
        action: 'deploy'
        platform: 'java'
        slot-name: 'production'
    
